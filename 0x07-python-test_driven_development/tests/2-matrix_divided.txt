The ``2-matrix_divided.py`` module
==================================

Using ``matrix_divided`` function
---------------------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test cases:

    >>> matrix_divided([[5, 6], [7.0, 2.8]], 2)
    [[2.5, 3.0], [3.5, 1.4]]

    >>> matrix_divided([[5, 6], [7.0, 2.8]], 2.0)
    [[2.5, 3.0], [3.5, 1.4]]

    >>> matrix_divided([[5, 6], [7.0, 2.8]], -2)
    [[-2.5, -3.0], [-3.5, -1.4]]

    >>> matrix_divided([[5, -6], [7.0, 2.8]], 2)
    [[2.5, -3.0], [3.5, 1.4]]

    >>> matrix_divided([[1, 2], [4, 6]], '#')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[5, 6], [7.0, 2.8]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[5, 6], [7.0, 2.8]], "rat")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[5, 6, 5], [7.0, 2.8]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[], []], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[1, 2, "a3"], [4, 5, 6]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1.0, -2.4, 3.1], [4.3, -5.3, -6.2]], 'z')
    Traceback (most recent call last):
    TypeError: div must be a number
